<UserControl x:Class="vp.UserControls.Playlists"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:vp.UserControls"
             xmlns:models="clr-namespace:vp.Models"
             xmlns:converters="clr-namespace:vp.Converters"
             mc:Ignorable="d" 
             xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:command="http://www.galasoft.ch/mvvmlight"
             xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             xmlns:vp="clr-namespace:vp"
             d:DesignHeight="450" d:DesignWidth="800"
             DataContext="{Binding Source={StaticResource Locator}, Path=PlaylistsViewModel}"
             dialog:DialogParticipation.Register="{Binding RelativeSource={RelativeSource Self}, Path=DataContext}"
             >

    <Grid Margin="2">

        <Grid.Resources>
            
            <ContextMenu x:Key="PlaylistsColumnContextMenu">
                <MenuItem Header="Add"
                          Command="{Binding Source={StaticResource Locator}, Path=PlaylistsViewModel.AddPlaylistCommand}"/>
            </ContextMenu>
            <ContextMenu x:Key="VideosColumnContextMenu">
                <MenuItem Header="Add"
                          Command="{Binding Source={StaticResource Locator}, Path=PlaylistsViewModel.AddVideosCommand}"
                          CommandParameter="{Binding Source={x:Reference Name=PlaylistDataGrid}, Path=SelectedItem}"
                          IsEnabled="{Binding Source={x:Reference Name=PlaylistDataGrid}, Path=SelectedItem, Converter={StaticResource SelectedItemToBoolConverter}}"/>
            </ContextMenu>
        </Grid.Resources>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="7*"/>
        </Grid.ColumnDefinitions>

        <DataGrid Name="PlaylistDataGrid"
                  Grid.Column="0"
                  ItemsSource="{Binding PlaylistCollection}"
                  ContextMenu="{StaticResource PlaylistsColumnContextMenu}"
                  AutoGenerateColumns="False"
                  CanUserResizeColumns="False"
                  IsReadOnly="True"
                  mah:DataGridRowHelper.SelectionUnit="FullRow"
                  CanUserReorderColumns="False"
                  SelectedItem="{Binding SelectedPlaylist, Mode=OneWayToSource}">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Playlist"
                                    Binding="{Binding PlaylistTitle}"
                                    Width="*"/>
            </DataGrid.Columns>
            <DataGrid.Resources>
                <ContextMenu x:Key="PlaylistDataRowContextMenu">
                    <MenuItem Header="Play"
                              Command="{Binding Source={StaticResource Locator}, Path=PlaylistsViewModel.PlayPlaylistCommand}"
                              CommandParameter="{Binding Source={x:Reference PlaylistDataGrid}, Path=SelectedItem}"/>
                    <MenuItem Header="Rename" 
                              Command="{Binding Source={StaticResource Locator},  Path=PlaylistsViewModel.RenamePlaylistCommand}"
                              CommandParameter="{Binding Source={x:Reference PlaylistDataGrid}, Path=SelectedItem}"/>
                    <MenuItem Header="Remove"
                              Command="{Binding Source={StaticResource Locator}, Path=PlaylistsViewModel.RemovePlaylistsCommand}"
                              CommandParameter="{Binding Source={x:Reference PlaylistDataGrid}, Path=SelectedItems}"/>
                    <MenuItem Header="Add"
                              Command="{Binding Source={StaticResource Locator}, Path=PlaylistsViewModel.AddPlaylistCommand}"/>
                </ContextMenu>
            </DataGrid.Resources>

            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow"
                       BasedOn="{StaticResource UiDataGridRow}">
                    <Setter Property="ContextMenu" Value="{StaticResource PlaylistDataRowContextMenu}" />
                    <Setter Property="vp:AttachedCommand.Event" Value="MouseDoubleClick"/>
                    <Setter Property="vp:AttachedCommand.Command" Value="{Binding Source={StaticResource Locator}, Path=PlaylistsViewModel.PlayPlaylistCommand}"/>
                    <Setter Property="vp:AttachedCommand.CommandParameter" Value="{Binding ElementName=PlaylistDataGrid, Path=SelectedItem}"/>
                </Style>
            </DataGrid.RowStyle>

        </DataGrid>

        <!--Both file drops and item drops are handled by the IDropTarget-->
        <DataGrid Name="VideosDataGrid"
                  Grid.Column="1"
                  ItemsSource="{Binding ElementName=PlaylistDataGrid, Path=SelectedItem.Videos}"
                  ContextMenu="{StaticResource VideosColumnContextMenu}"
                  AutoGenerateColumns="False"
                  IsReadOnly="True"
                  mah:DataGridRowHelper.SelectionUnit="FullRow"
                  CanUserReorderColumns="False"
                  dd:DragDrop.IsDragSource="True"
                  dd:DragDrop.IsDropTarget="True"
                  dd:DragDrop.DropHandler="{Binding}">

            <DataGrid.Columns>
                <DataGridTextColumn Header="Name"
                                    Binding="{Binding Name}"
                                    Width="5*"/>
                <DataGridTextColumn Header="Length"
                                    Binding="{Binding Length, StringFormat=\{0:hh\\:mm\\:ss\}}"
                                    Width="*">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource MetroDataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Progress"
                                    Width="1.1*">
                    <DataGridTextColumn.Binding>
                        <MultiBinding Converter="{StaticResource TimeWatchedAndDurationToPercentageConverter}"
                                      StringFormat="{}{0}%">
                            <Binding Path="TimeWatched"/>
                            <Binding Path="Length"/>
                        </MultiBinding>
                    </DataGridTextColumn.Binding>
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource MetroDataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                   <DataGridTextColumn.ElementStyle>
                       <Style TargetType="TextBlock">
                           <Setter Property="HorizontalAlignment" Value="Center"/>
                       </Style>
                   </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>

            <DataGrid.Resources>
                <ContextMenu x:Key="VideoDataRowContextMenu">
                    <MenuItem Header="Play"
                              Command="{Binding Source={StaticResource Locator}, Path=PlaylistsViewModel.PlayVideoCommand}"
                              CommandParameter="{Binding Source={x:Reference VideosDataGrid}, Path=SelectedItem}"/>
                    <MenuItem Header="Remove"
                              Command="{Binding Source={StaticResource Locator}, Path=PlaylistsViewModel.RemoveVideosCommand}"
                              CommandParameter="{Binding Source={x:Reference VideosDataGrid}, Path=SelectedItems}"/>
                    <MenuItem Header="Add"
                              Command="{Binding Source={StaticResource Locator}, Path=PlaylistsViewModel.AddVideosCommand}"
                              CommandParameter="{Binding Source={x:Reference Name=PlaylistDataGrid}, Path=SelectedItem}"
                              IsEnabled="{Binding Source={x:Reference Name=PlaylistDataGrid}, Path=SelectedItem, Converter={StaticResource SelectedItemToBoolConverter}}"/>
                </ContextMenu>
            </DataGrid.Resources>

            <DataGrid.RowStyle>
                <!--Without BasedOn row becomes white on right click-->
                <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource UiDataGridRow}">
                    <Setter Property="ContextMenu" Value="{StaticResource VideoDataRowContextMenu}" />
                    <Setter Property="vp:AttachedCommand.Event" Value="MouseDoubleClick"/>
                    <Setter Property="vp:AttachedCommand.Command" Value="{Binding Source={StaticResource Locator}, Path=PlaylistsViewModel.PlayVideoCommand}"/>
                    <Setter Property="vp:AttachedCommand.CommandParameter" Value="{Binding ElementName=VideosDataGrid, Path=SelectedItem}"/>
                </Style>
            </DataGrid.RowStyle>
        </DataGrid>
    </Grid>
</UserControl>
