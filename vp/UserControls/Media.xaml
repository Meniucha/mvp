<UserControl x:Class="vp.UserControls.Media"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:vp.UserControls"
             xmlns:ffme="clr-namespace:Unosquare.FFME;assembly=ffme.win"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:command="http://www.galasoft.ch/mvvmlight"
             xmlns:settings="clr-namespace:vp.Services.Settings"
             xmlns:converters="clr-namespace:vp.Converters"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             x:Name="MediaService"
             DataContext="{Binding Source={StaticResource Locator}, Path=MediaViewModel}">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <command:EventToCommand Command="{Binding InitializeMediaServiceCommand}"
                                    CommandParameter="{Binding ElementName=MediaService}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <UserControl.ContextMenu>
        <ContextMenu>
            <MenuItem Header="test"
                      Command="{Binding OpenVideoCommand}"></MenuItem>
        </ContextMenu>
    </UserControl.ContextMenu>

    <Grid>
        <ffme:MediaElement x:Name="MediaPlayer" 
                           LoadedBehavior="Play"
                           UnloadedBehavior="Manual"
                           MediaOpened="MediaPlayer_OnMediaOpened"
                           Volume="{Binding Volume, UpdateSourceTrigger=PropertyChanged}"
                           Position="{Binding Position}"
                           >
            <ffme:MediaElement.Background>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="#02013a" Offset="0.5"/>
                    <GradientStop Color="Black" Offset="0.9"/>
                </LinearGradientBrush>
            </ffme:MediaElement.Background>
        </ffme:MediaElement>
        
        <DockPanel LastChildFill="False">
            <StackPanel Orientation="Vertical"
                        DockPanel.Dock="Bottom">

                <DockPanel Background="{DynamicResource SliderBackground}">
                    <Slider 
                        Maximum="{Binding ElementName=MediaPlayer, Path=NaturalDuration, Converter={StaticResource TimeSpanToDoubleConverter}}"
                        TickFrequency="0.01"
                        IsMoveToPointEnabled="True"
                        DockPanel.Dock="Top"
                        Value="{Binding ElementName=MediaPlayer, Path=Position, Converter={StaticResource TimeSpanToDoubleConverter}}"
                        Style="{DynamicResource PositionSliderStyle}">
                    </Slider>
                    <TextBlock Text="{Binding ElementName=MediaPlayer, Path=RemainingDuration, StringFormat=\{0:hh\\:mm\\:ss\}, Converter={StaticResource DurationToTimeSpanConverter}}" 
                               Foreground="{DynamicResource ButtonForegroundBrush}" 
                               FontSize="10" 
                               DockPanel.Dock="Right"
                               Margin="0 0 15 0"/>

                    <TextBlock Text="{Binding ElementName=MediaPlayer, Path=Position, StringFormat=\{0:hh\\:mm\\:ss\}}" 
                               Foreground="{DynamicResource ButtonForegroundBrush}" 
                               FontSize="10" 
                               DockPanel.Dock="Left"
                               Margin="15 0 0 0"/>
                </DockPanel>

                <StatusBar Height="40"
                           VerticalAlignment="Bottom">
                    <StatusBar.Background>
                        <SolidColorBrush Color="Black"
                                         Opacity="0.3"/>
                    </StatusBar.Background>
                    <StatusBar.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                            </Grid>
                        </ItemsPanelTemplate>
                    </StatusBar.ItemsPanel>



                    <StatusBarItem Grid.Column="0"
                           HorizontalAlignment="Center">
                        <Slider Value="{Binding Volume, Converter={StaticResource MediaElementToSliderVolumeConverter}, Mode=TwoWay}"
                                Maximum="{x:Static settings:ApplicationConstants.VolumeSliderMaxValue}"
                                Width="100"
                                Style="{DynamicResource VolumeSliderStyle}"/>
                    </StatusBarItem>
                    <StatusBarItem Grid.Column="1"
                           HorizontalAlignment="Center">
                        <StackPanel Orientation="Horizontal">

                            <Button Command="{Binding PrevVideoCommand}"
                                    Style="{DynamicResource UiButtonStyle}"
                                    Margin="0 0 10 0">
                                <fa:ImageAwesome Icon="Backward" Foreground="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"/>
                            </Button>
                            <Button Command="{Binding PlayPauseVideoCommand}"
                                    Margin="0 0 10 0">
                                <Button.Style>
                                    <Style TargetType="Button"
                                           BasedOn="{StaticResource UiButtonStyle}">
                                        <Setter Property="Content">
                                            <Setter.Value>
                                                <fa:ImageAwesome Icon="Play" Foreground="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"/>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=MediaPlayer, Path=IsPlaying}" Value="True">
                                                <Setter Property="Content">
                                                    <Setter.Value>
                                                        <!--For some reason RelativeSource is not workign for the Foreground inside here-->
                                                        <fa:ImageAwesome Icon="Pause" Foreground="{StaticResource ButtonForegroundBrush}"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            
                            <Button Command="{Binding NextVideoCommand}"
                                    Style="{DynamicResource UiButtonStyle}">
                                <fa:ImageAwesome Icon="Forward" Foreground="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"/>
                            </Button>
                        </StackPanel>
                    </StatusBarItem>

                    <StatusBarItem Grid.Column="2"
                                   HorizontalAlignment="Right"
                                   Margin="0 0 50 0">
                        <StackPanel Orientation="Horizontal">
                            <ToggleButton Name="VisibilityToggleButton"
                                          IsChecked="{Binding IsOpenCurrentPlaylistPanel}"
                                          Style="{DynamicResource UiToggleButtonStyle}">
                                <fa:ImageAwesome Icon="ArrowUp" Foreground="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=Foreground}"/>
                            </ToggleButton>
                            <Button Command="{Binding NavigateToPlaylistPageCommand}"
                                    Style="{DynamicResource UiButtonStyle}">
                                <fa:ImageAwesome Icon="Edit" Foreground="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"/>
                            </Button>
                            <Button Command="{Binding FullscreenCommand}"
                                    Style="{DynamicResource UiButtonStyle}"
                                    Padding="10">
                                <fa:ImageAwesome Icon="ArrowsAlt" Foreground="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"/>
                            </Button>
                        </StackPanel>
                    </StatusBarItem>

                </StatusBar>
            </StackPanel>
            <DataGrid Name="PlaylistDataGrid" 
                      DockPanel.Dock="Right"
                      AutoGenerateColumns="False"
                      ItemsSource="{Binding CurrentPlaylist.Videos}"
                      IsReadOnly="True"
                      CanUserReorderColumns="False"
                      mah:DataGridRowHelper.SelectionUnit="FullRow"
                      Width="350"
                      >
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Video"
                                        Binding="{Binding Name}"
                                        Width="4*">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource MetroDataGridColumnHeader}">
                                <Setter Property="Padding" Value="4"/>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Progress"
                                        Width="1.2*">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.Binding>
                            <MultiBinding Converter="{StaticResource TimeWatchedAndDurationToPercentageConverter}"
                                          StringFormat="{}{0}%">
                                <Binding Path="TimeWatched"/>
                                <Binding Path="Length"/>
                            </MultiBinding>
                        </DataGridTextColumn.Binding>
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource MetroDataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>

                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow"
                           BasedOn="{StaticResource UiDataGridRow}">
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.InputBindings>
                    <!--TODO row only-->
                    <MouseBinding MouseAction="LeftDoubleClick" 
                                  Command="{Binding OpenVideoCommand}"
                                  CommandParameter="{Binding ElementName=PlaylistDataGrid, Path=SelectedItem}"/>
                </DataGrid.InputBindings>
            </DataGrid>
        </DockPanel>
    </Grid>
</UserControl>
