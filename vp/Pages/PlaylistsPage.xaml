<Page x:Class="vp.Pages.PlaylistsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:vp.UserControls"
      xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
      xmlns:dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
      xmlns:converters="clr-namespace:vp.Converters"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="PlaylistsPage">

    <!--<Gr
id>
        <Grid.Resources>
            <converters:SelectedItemToBoolConverter x:Key="SelectedItemToBoolConverter"/>
            <ContextMenu x:Key="PlaylistsColumnContextMenu">
                <MenuItem Header="Add"
                          Command="{Binding AddPlaylistCommand}"/>
            </ContextMenu>
            <ContextMenu x:Key="VideosColumnContextMenu">
                <MenuItem Header="Add"
                          Command="{Binding AddVideosCommand}"
                          CommandParameter="{Binding Source={x:Reference Name=PlaylistDataGrid}, Path=SelectedItem}"
                          IsEnabled="{Binding Source={x:Reference Name=PlaylistDataGrid}, Path=SelectedItem, Converter={StaticResource SelectedItemToBoolConverter}}"/>
            </ContextMenu>
        </Grid.Resources>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.5*"/>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="7*"/>
        </Grid.ColumnDefinitions>

        <Button Grid.Column="0"
                Content="-"
                Height="30"
                Width="30"
                VerticalAlignment="Top"
                Style="{DynamicResource MahApps.Metro.Styles.MetroCircleButtonStyle}"
                Command="{Binding NavigateToMediaPageCommand}"/>

        <DataGrid Name="PlaylistDataGrid"
                  Grid.Column="1"
                  ItemsSource="{Binding PlaylistCollection}"
                  ContextMenu="{StaticResource PlaylistsColumnContextMenu}"
                  AutoGenerateColumns="False"
                  CanUserResizeColumns="False"
                  IsReadOnly="True"
                  mah:DataGridRowHelper.SelectionUnit="FullRow"
                  CanUserReorderColumns="False"
                  SelectedItem="{Binding SelectedPlaylist, Mode=OneWayToSource}">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Playlist"
                                    Binding="{Binding PlaylistTitle}"
                                    Width="*"/>
            </DataGrid.Columns>
            <DataGrid.Resources>
                <ContextMenu x:Key="DataRowContextMenu">
                    <MenuItem Header="Play"
                              Command="{Binding Source={StaticResource Locator}, Path=PlaylistsViewModel.PlayPlaylistCommand}"
                              CommandParameter="{Binding Source={x:Reference PlaylistDataGrid}, Path=SelectedItem}"/>
                    <MenuItem Header="Rename" 
                              Command="{Binding Source={StaticResource Locator},  Path=PlaylistsViewModel.RenamePlaylistCommand}"
                              CommandParameter="{Binding Source={x:Reference PlaylistDataGrid}, Path=SelectedItem}"/>
                    <MenuItem Header="Remove"
                              Command="{Binding Source={StaticResource Locator}, Path=PlaylistsViewModel.RemovePlaylistsCommand}"
                              CommandParameter="{Binding Source={x:Reference PlaylistDataGrid}, Path=SelectedItems}"/>
                </ContextMenu>
            </DataGrid.Resources>

            <DataGrid.RowStyle>
                -->
    <!--Without BasedOn row becomes white on right click--><!--
                <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MetroDataGridRow}">
                    <Setter Property="ContextMenu" Value="{StaticResource DataRowContextMenu}" />
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.InputBindings>
                <MouseBinding MouseAction="LeftDoubleClick"
                              Command="{Binding PlayPlaylistCommand}"
                              CommandParameter="{Binding ElementName=PlaylistDataGrid, Path=SelectedItem}"/>
            </DataGrid.InputBindings>
        </DataGrid>
        -->
    <!--<controls:ListViewExtended x:Name="PlaylistListView"
                                   Grid.Column="1"
                                   ItemsSource="{Binding PlaylistCollection}"
                                   ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                   ContextMenu="{StaticResource PlaylistsColumnContextMenu}">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Playlists" 
                                    Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}, Path=ActualWidth}"
                                    DisplayMemberBinding="{Binding PlaylistTitle}"/>
                </GridView>
            </ListView.View>
        </controls:ListViewExtended>-->

        <!--<ListView Name="VideosListView"
                  Grid.Column="2"
                  ItemsSource="{Binding ElementName=PlaylistListView, Path=SelectedItem.Videos}"
                  ContextMenu="{StaticResource VideosColumnContextMenu}">
            <ListView.View>
                <GridView AllowsColumnReorder="False">
                    <GridViewColumn Header="Name">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>

        </ListView>-->
    <!--

        <DataGrid Name="VideosDataGrid"
                  Grid.Column="2"
                  ItemsSource="{Binding ElementName=PlaylistDataGrid, Path=SelectedItem.Videos}"
                  ContextMenu="{StaticResource VideosColumnContextMenu}"
                  AutoGenerateColumns="False"
                  IsReadOnly="True"
                  mah:DataGridRowHelper.SelectionUnit="FullRow"
                  CanUserReorderColumns="False">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Name"
                                    Binding="{Binding Name}"/>
                <DataGridTextColumn Header="Length"
                                    Binding="{Binding Length}"/>
                <DataGridTextColumn Header="Progress"
                                    Binding="{Binding TimeWatched}"/>
            </DataGrid.Columns>

            <DataGrid.Resources>
                <ContextMenu x:Key="DataRowContextMenu">
                    <MenuItem Header="Play"
                              Command="{Binding Source={StaticResource Locator}, Path=PlaylistsViewModel.PlayVideoCommand}"
                              CommandParameter="{Binding Source={x:Reference VideosDataGrid}, Path=SelectedItem}"/>
                    <MenuItem Header="Remove"
                              Command="{Binding Source={StaticResource Locator}, Path=PlaylistsViewModel.RemoveVideosCommand}"
                              CommandParameter="{Binding Source={x:Reference VideosDataGrid}, Path=SelectedItems}"/>
                </ContextMenu>
            </DataGrid.Resources>

            <DataGrid.RowStyle>
                -->
    <!--Without BasedOn row becomes white on right click--><!--
                <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MetroDataGridRow}">
                    <Setter Property="ContextMenu" Value="{StaticResource DataRowContextMenu}" />
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.InputBindings>
                <MouseBinding MouseAction="LeftDoubleClick"
                              Command="{Binding PlayVideoCommand}"
                              CommandParameter="{Binding ElementName=VideosDataGrid, Path=SelectedItem}"/>
            </DataGrid.InputBindings>
        </DataGrid>
    </Grid>-->

    <Grid>
        <local:Playlists/>
    </Grid>
</Page>
